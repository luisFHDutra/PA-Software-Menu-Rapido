/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package br.univates.apresentacao;

import br.univates.menurapido.Sys;
import br.univates.negocio.ItemPedido;
import br.univates.negocio.Mesa;
import br.univates.negocio.Pedido;
import br.univates.persistencia.DaoFactory;
import br.univates.raiz.db.DataBaseException;
import br.univates.raiz.persistence.IDao;
import br.univates.raiz.persistence.InvalidKeyException;
import br.univates.raiz.persistence.KeyViolationException;
import br.univates.raiz.persistence.NotFoundException;
import java.util.ArrayList;
import javax.swing.JOptionPane;

/**
 *
 * @author luis.dutra
 */
public class TelaPedidoUI extends javax.swing.JFrame {

    private Pedido pedidoCurrent;
    private Pedido pedidoOld;
    private boolean novo;
    private TelaMenuUI telaMenu;
    public ArrayList<ItemPedido> itens;
    private boolean onlyShowItens;

    /**
     * Creates new form TelaUsuarioUI
     */
    public TelaPedidoUI(TelaMenuUI tela) {
        initComponents();

        this.setTitle("Pedidos");
        
        ArrayList<Pedido> pedidos = DaoFactory.criarPedidoDao().readAll();

        this.tbConsulta.setModel(new TableModelPedido(pedidos));
        this.novo = false;

        this.btnSalvar.setEnabled(false);
        this.btnCancelar.setEnabled(false);

        this.btnVoltar.setEnabled(true);

        this.tfID.setEditable(false);

//        ArrayList<StatusAtendimento> status = DaoFactory.criarStatusAtendimentoDao().readAll();
//        if (status == null) {
//            this.initCBStatus(new ArrayList<>());
//        } else {
//            this.initCBStatus(status);
//        }

        ArrayList<Mesa> mesas = DaoFactory.criarMesaDao().readAll();
        if (mesas == null) {
            this.initCBMesa(new ArrayList<>());
        } else {
            this.initCBMesa(mesas);
        }

//        ArrayList<TipoPagamento> tipos = DaoFactory.criarTipoPagamentoDao().readAll();
//        if (tipos == null) {
//            this.initCBTipo(new ArrayList<>());
//        } else {
//            this.initCBTipo(tipos);
//        }

//        this.cbTipoPagamento.setEnabled(false);
        this.cbMesa.setEnabled(false);
//        this.cbStatus.setEnabled(false);

//        this.btnTelaItens.setEnabled(false);

        this.onlyShowItens = true;

        this.telaMenu = tela;

        this.setLocationRelativeTo(null);
    }

    public void setProduto(Pedido pedido) {

        this.pedidoCurrent = pedido;

        if (pedido.getIdPedido() == 0) {
            this.tfID.setText("");
        } else {
            this.tfID.setInteger(pedido.getIdPedido());
        }

//        if (pedido.getStatusAtendimento() != null) {
//            this.cbStatus.setSelectedItem(pedido.getStatusAtendimento());
//        }

        if (pedido.getMesa() != null) {
            this.cbMesa.setSelectedItem(pedido.getMesa());
        }

//        if (pedido.getPagamento() != null) {
//            this.cbTipoPagamento.setSelectedItem(pedido.getPagamento());
//        }

        this.itens = pedido.getItemPedido();
    }

//    private void initCBStatus(ArrayList<StatusAtendimento> status) {
//        this.cbStatus.removeAllItems();
//        for (StatusAtendimento s : status) {
//            cbStatus.addItem(s);
//        }
//    }

    private void initCBMesa(ArrayList<Mesa> mesas) {
        this.cbMesa.removeAllItems();
        for (Mesa mesa : mesas) {
            cbMesa.addItem(mesa);
        }
    }

//    private void initCBTipo(ArrayList<TipoPagamento> tipos) {
//        this.cbTipoPagamento.removeAllItems();
//        for (TipoPagamento tipo : tipos) {
//            cbTipoPagamento.addItem(tipo);
//        }
//    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        tbConsulta = new javax.swing.JTable();
        btnNovo = new javax.swing.JButton();
        btnEditar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnVoltar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        tfID = new br.univates.raiz.JIntegerField();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btnCancelar = new javax.swing.JButton();
        btnSalvar = new javax.swing.JButton();
        cbMesa = new javax.swing.JComboBox<>();
        btnTelaItens = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        tbConsulta.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tbConsulta.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tbConsultaMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(tbConsulta);

        btnNovo.setText("Novo");
        btnNovo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoActionPerformed(evt);
            }
        });

        btnEditar.setText("Editar");
        btnEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEditarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnVoltar.setText("Voltar");
        btnVoltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnVoltarActionPerformed(evt);
            }
        });

        tfID.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                tfIDFocusLost(evt);
            }
        });

        jLabel2.setText("ID: ");

        jLabel4.setText("Itens:");

        jLabel5.setText("Mesa:");

        btnCancelar.setText("Cancelar");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        cbMesa.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                cbMesaFocusLost(evt);
            }
        });

        btnTelaItens.setText("Lista de itens");
        btnTelaItens.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTelaItensActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(btnCancelar)
                        .addGap(18, 18, 18)
                        .addComponent(btnSalvar))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel2)
                            .addComponent(jLabel4))
                        .addGap(65, 65, 65)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnTelaItens)
                            .addComponent(tfID, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbMesa, 0, 395, Short.MAX_VALUE))))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(tfID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cbMesa, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(btnTelaItens))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnCancelar)
                    .addComponent(btnSalvar))
                .addContainerGap(14, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 509, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovo)
                .addGap(18, 18, 18)
                .addComponent(btnEditar)
                .addGap(18, 18, 18)
                .addComponent(btnExcluir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnVoltar)
                .addContainerGap())
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 214, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnExcluir)
                        .addComponent(btnEditar)
                        .addComponent(btnNovo))
                    .addComponent(btnVoltar))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tbConsultaMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbConsultaMouseClicked
        int linhaSelecionada = this.tbConsulta.getSelectedRow();

        TableModelPedido model = (TableModelPedido) this.tbConsulta.getModel();
        Pedido pedido = model.getPedidos().get(linhaSelecionada);

        this.setProduto(pedido);
    }//GEN-LAST:event_tbConsultaMouseClicked

    private void btnNovoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoActionPerformed

        this.btnSalvar.setEnabled(true);
        this.btnCancelar.setEnabled(true);
        this.btnVoltar.setEnabled(true);

        this.tfID.setEditable(true);
//        this.cbTipoPagamento.setEnabled(true);
        this.cbMesa.setEnabled(true);
//        this.cbStatus.setEnabled(true);

//        this.btnTelaItens.setEnabled(true);

        this.onlyShowItens = false;

        this.novo = true;

        if (pedidoCurrent != null) {
            this.pedidoOld = pedidoCurrent.clone();
        }

        this.setProduto(new Pedido());
        this.tfID.requestFocus();
    }//GEN-LAST:event_btnNovoActionPerformed

    private void btnEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEditarActionPerformed

        if (pedidoCurrent != null) {
            this.pedidoOld = pedidoCurrent.clone();
            this.btnSalvar.setEnabled(true);
            this.btnCancelar.setEnabled(true);
            this.btnVoltar.setEnabled(true);

            this.novo = false;
            this.tfID.setEditable(false);
            this.cbMesa.setEnabled(true);
//            this.cbTipoPagamento.setEnabled(false);
//            this.cbStatus.setEnabled(true);
//            this.cbStatus.requestFocus();

//            this.btnTelaItens.setEnabled(true);
            this.onlyShowItens = false;
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um pedido na tabela", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnEditarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if (pedidoCurrent != null) {
            try {
                int x = JOptionPane.showConfirmDialog(this, "Tem certeza que deseja excluir?",
                        "Confirmação",
                        JOptionPane.YES_NO_OPTION);

                if (x == 0) {
                    DaoFactory.criarPedidoDao().delete(pedidoCurrent.getIdPedido());

                    TableModelPedido model = (TableModelPedido) this.tbConsulta.getModel();
                    model.getPedidos().remove(pedidoCurrent);

                    this.tbConsulta.revalidate();
                    this.tbConsulta.repaint();
                    this.tfID.setText("");

                    this.pedidoCurrent = null;
                }
            } catch (NotFoundException ex) {
                JOptionPane.showMessageDialog(this, "Este pedido não pode ser deletado", "Aviso", JOptionPane.INFORMATION_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(this, "Selecione um pedido na tabela", "Aviso", JOptionPane.INFORMATION_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnVoltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnVoltarActionPerformed
        telaMenu.setVisible(true);
        dispose();
    }//GEN-LAST:event_btnVoltarActionPerformed

    private void tfIDFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_tfIDFocusLost
        this.pedidoCurrent.setIdPedido(this.tfID.getInteger());
    }//GEN-LAST:event_tfIDFocusLost

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        if (pedidoOld != null) {
            this.pedidoCurrent.setIdPedido(this.pedidoOld.getIdPedido());
            this.pedidoCurrent.setMesa(this.pedidoOld.getMesa());
            this.pedidoCurrent.setPagamento(this.pedidoOld.getPagamento());
            this.pedidoCurrent.setStatusAtendimento(this.pedidoOld.getStatusAtendimento());
            this.pedidoCurrent.setItemPedido(this.pedidoOld.getItemPedido());
            this.tfID.setInteger(this.pedidoOld.getIdPedido());
//            this.cbTipoPagamento.setSelectedItem(this.pedidoOld.getPagamento());
            this.cbMesa.setSelectedItem(this.pedidoOld.getMesa());
//            this.cbStatus.setSelectedItem(this.pedidoOld.getStatusAtendimento());
        }

        this.tbConsulta.revalidate();
        this.tbConsulta.repaint();

        this.tfID.setEditable(false);
//        this.cbTipoPagamento.setEnabled(false);
        this.cbMesa.setEnabled(false);
//        this.cbStatus.setEnabled(false);

//        this.btnTelaItens.setEnabled(false);
        this.onlyShowItens = true;

        this.btnSalvar.setEnabled(false);
        this.btnCancelar.setEnabled(false);
        this.btnVoltar.setEnabled(true);
    }//GEN-LAST:event_btnCancelarActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        IDao<Pedido, Integer> dao = DaoFactory.criarPedidoDao();

        try {
            if (novo) {

                dao.create(pedidoCurrent);

                TableModelPedido model = (TableModelPedido) this.tbConsulta.getModel();
                model.getPedidos().add(pedidoCurrent);
            } else {

                dao.update(pedidoCurrent);
            }

            this.tbConsulta.revalidate();
            this.tbConsulta.repaint();

            this.tfID.setEditable(false);
//            this.cbTipoPagamento.setEnabled(false);
            this.cbMesa.setEnabled(false);
//            this.cbStatus.setEnabled(false);

//            this.btnTelaItens.setEnabled(false);
            this.onlyShowItens = true;

            this.btnSalvar.setEnabled(false);
            this.btnCancelar.setEnabled(false);
            this.btnVoltar.setEnabled(true);
        } catch (KeyViolationException | InvalidKeyException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        } catch (NotFoundException ex) {
            JOptionPane.showMessageDialog(this, ex.getMessage());
        }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        try {
            Sys.getInstance().getDB().closeConnection();
        } catch (DataBaseException ex) {
            JOptionPane.showMessageDialog(null,
                    "Erro fatal ao encerrar a conexão com o banco de dados",
                    "Conexão com o banco de dados", JOptionPane.ERROR_MESSAGE);
            dispose();
        }
    }//GEN-LAST:event_formWindowClosing

    private void cbMesaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_cbMesaFocusLost
        this.pedidoCurrent.setMesa((Mesa) this.cbMesa.getSelectedItem());
    }//GEN-LAST:event_cbMesaFocusLost

    private void btnTelaItensActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTelaItensActionPerformed
        TelaItemPedidoUI tela = new TelaItemPedidoUI(this, itens, onlyShowItens);
        tela.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_btnTelaItensActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnEditar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnNovo;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnTelaItens;
    private javax.swing.JButton btnVoltar;
    private javax.swing.JComboBox<Mesa> cbMesa;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable tbConsulta;
    private br.univates.raiz.JIntegerField tfID;
    // End of variables declaration//GEN-END:variables
}
